if v:lang =~ "utf8$" || v:lang =~ "UTF-8$"
	set fileencodings=ucs-bom,utf-8,latin1
endif

"set backup                      " keep a backup file
set nocompatible                " Use Vim defaults (much better!)
set backspace=indent,eol,start  " Allow backspacing over everything in insert mode
set autoindent                  " Always set autoindenting on
set viminfo='20,\"50            " Read/write a .viminfo file, don't store more than 50 lines of registers
set history=50                  " Keep 50 lines of command line history
set ruler                       " Show the cursor position all the time
set tabstop=4
set shiftwidth=4
set textwidth=80
set number
set cursorline

if has("autocmd")
	augroup fedora
	autocmd!

	" Set text width to 80 characters for common files
	" (commented out because it should be done at the top for all files)
	"autocmd BufRead, BuffNewFile *.rmd,*.md,*.txt,*.c,*.h,*.cpp,*.java set tw=80

	" When editing a file, always jump to the last cursor position
	autocmd BufReadPost *
	\ if line("'\"") > 0 && line ("'\"") <= line("$") |
	\ 	exe "normal! g'\"" |
	\ endif

	" Don't write swapfile on most commonly used directories for NFS mounts or USB sticks
	autocmd BufNewFile,BufReadPre /media/*,/run/media/*,/mnt/* set directory=~/tmp,/var/tmp,/tmp

	" Start with spec file template
	autocmd BufNewFile *.spec 0r /usr/share/vim/vimfiles/template.spec
	augroup END

	" Compile and run hotkeys
	autocmd Filetype rmd map <F5> :!echo<space>"require(rmarkdown);<space>render('<c-r>%')"<space>\|<space>R<space>--vanilla<enter>
	autocmd Filetype tex map <F5> :!pdflatex -output-directory %:p:h %<enter>
endif

if has("cscope") && filereadable("/usr/bin/cscope")
	set csprg=/usr/bin/cscope
	set csto=0
	set cst
	set nocsverb
	" Add any database in current directory
	if filereadable("cscope.out")
		cs add $PWD/cscope.out
	" Else add database pointed to by environment
	elseif $CSCOPE_DB != ""
		cs add $CSCOPE_DB
	endif
	set csverb
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
	set hlsearch
	syntax enable
	if filereadable(expand("~/.vimrc_background"))
		let base16colorspace=256
		source ~/.vimrc_background
	endif
endif

filetype plugin on

if &term=="xterm"
	set t_Co=8
	set t_Sb=[4%dm
	set t_Sf=[3%dm
endif

" Don't wake up system with blinking cursor:
" http://www.linuxpowertop.org/known.php
let &guicursor = &guicursor . ",a:blinkon0"

" Set cursor shape to IBeam in insert mode, underline in replace mode, and block in normal mode.
" Sources http://vim.wikia.com/wiki/Change_cursor_shape_in_different_modes
"	      https://vi.stackexchange.com/questions/3379/cursor-shape-under-vim-tmux
"         https://vi.stackexchange.com/questions/7306/vim-normal-and-insert-mode-cursor-not-changing-in-gnu-screen
" For GNU Screen
"let &t_SI = "\eP\e[6 q\e\\"
"let &t_SR = "\eP\e[4 q\e\\"
"let &t_EI = "\eP\e[2 q\e\\"
" For TMUX
let &t_SI = "\<esc>Ptmux;\<esc>\e[6 q\<esc>\\"
let &t_SR = "\<esc>Ptmux;\<esc>\e[4 q\<esc>\\"
let &t_EI = "\<esc>Ptmux;\<esc>\e[2 q\<esc>\\"
" For bare terminal (though the GNU screen settings appear to work fine as
" well)
"let &t_SI = "\e[6 q"
"let &t_SR = "\e[4 q"
"let &t_EI = "\e[2 q"

